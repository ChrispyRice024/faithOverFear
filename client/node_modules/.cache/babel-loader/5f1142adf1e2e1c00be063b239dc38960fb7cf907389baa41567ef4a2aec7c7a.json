{"ast":null,"code":"import React,{useEffect,useState}from'react';import data from'../data';// const dotenv = require('dotenv')\n// dotenv.config()\n//Seed Data\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Home(){const[data,setData]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{const fetchData=async()=>{try{const res=await fetch('https://dark-erin-goshawk-toga.cyclic.app/item',{method:'GET',headers:{'Content-Type':'application/json'}});if(!res.ok){throw new Error('Network response was not okay');}const result=await res.json();setData(result);}catch(err){console.error('Error',err);}finally{setLoading(false);}};fetchData();},[]);if(loading){return/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"});}return/*#__PURE__*/_jsx(\"div\",{id:\"home\",children:data?/*#__PURE__*/_jsxs(\"p\",{children:[\"Data: \",JSON.stringify(data)]}):/*#__PURE__*/_jsx(\"p\",{children:\"No data available\"})});}","map":{"version":3,"names":["React","useEffect","useState","data","jsx","_jsx","jsxs","_jsxs","Home","setData","loading","setLoading","fetchData","res","fetch","method","headers","ok","Error","result","json","err","console","error","children","id","JSON","stringify"],"sources":["C:/Users/chris/OneDrive/Documents/Repositories/faithOverFear/client/src/Pages/Home.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport data from '../data'\r\n// const dotenv = require('dotenv')\r\n// dotenv.config()\r\n//Seed Data\r\n\r\n\r\nexport default function Home (){\r\n\r\n    const [data, setData] = useState(null)\r\n    const [loading, setLoading] = useState(true)\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try{\r\n                const res = await fetch('https://dark-erin-goshawk-toga.cyclic.app/item', {\r\n                    method: 'GET',\r\n                    headers:{\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                })\r\n                if (!res.ok){\r\n                    throw new Error('Network response was not okay')\r\n                }\r\n\r\n                const result = await res.json()\r\n                setData(result)\r\n            }catch(err){\r\n                console.error('Error', err)\r\n            }finally{\r\n                setLoading(false)\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    if(loading){\r\n        return <p>Loading...</p>\r\n    }\r\n\r\n    return(\r\n        <div id='home'>\r\n            {data ? (\r\n                <p>\r\n                    Data: {JSON.stringify(data)}\r\n                </p>\r\n            ):(\r\n                <p>No data available</p>\r\n            )}\r\n\r\n        </div>\r\n    )\r\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAGC,SAAS,CAAEC,QAAQ,KAAO,OAAO,CAChD,MAAO,CAAAC,IAAI,KAAM,SAAS,CAC1B;AACA;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAGA,cAAe,SAAS,CAAAC,IAAIA,CAAA,CAAG,CAE3B,KAAM,CAACL,IAAI,CAAEM,OAAO,CAAC,CAAGP,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACQ,OAAO,CAAEC,UAAU,CAAC,CAAGT,QAAQ,CAAC,IAAI,CAAC,CAC5CD,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAW,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC1B,GAAG,CACC,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,gDAAgD,CAAE,CACtEC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAC,CACJ,cAAc,CAAE,kBACpB,CACJ,CAAC,CAAC,CACF,GAAI,CAACH,GAAG,CAACI,EAAE,CAAC,CACR,KAAM,IAAI,CAAAC,KAAK,CAAC,+BAA+B,CAAC,CACpD,CAEA,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAN,GAAG,CAACO,IAAI,CAAC,CAAC,CAC/BX,OAAO,CAACU,MAAM,CAAC,CACnB,CAAC,MAAME,GAAG,CAAC,CACPC,OAAO,CAACC,KAAK,CAAC,OAAO,CAAEF,GAAG,CAAC,CAC/B,CAAC,OAAO,CACJV,UAAU,CAAC,KAAK,CAAC,CACrB,CACJ,CAAC,CACDC,SAAS,CAAC,CAAC,CACf,CAAC,CAAE,EAAE,CAAC,CAEN,GAAGF,OAAO,CAAC,CACP,mBAAOL,IAAA,MAAAmB,QAAA,CAAG,YAAU,CAAG,CAAC,CAC5B,CAEA,mBACInB,IAAA,QAAKoB,EAAE,CAAC,MAAM,CAAAD,QAAA,CACTrB,IAAI,cACDI,KAAA,MAAAiB,QAAA,EAAG,QACO,CAACE,IAAI,CAACC,SAAS,CAACxB,IAAI,CAAC,EAC5B,CAAC,cAEJE,IAAA,MAAAmB,QAAA,CAAG,mBAAiB,CAAG,CAC1B,CAEA,CAAC,CAEd"},"metadata":{},"sourceType":"module","externalDependencies":[]}